/*
 * generated by Xtext
 */
package com.xtext.rest.rdsl.validation

import com.xtext.rest.rdsl.restDsl.Attribute
import com.xtext.rest.rdsl.restDsl.RestDslPackage
import org.eclipse.xtext.validation.Check
import com.xtext.rest.rdsl.restDsl.RESTState

/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class RestDslValidator extends AbstractRestDslValidator {

	public static val INVALID_ATTRIB_NAME = "INVALID_ATTRIBUT_NAME" //FOR @Fix 
	public static val INVALID_RES_NAME = "INVALID_RESOURCE_NAME"
	public static val REST_START_POINT = "REST_START_POINT"
	
	@Check
	def checkAttributStartsWithLowerCase(Attribute attribute) {
		if (!Character.isLowerCase(attribute.name.charAt(0))) {
			warning('Attribute names should start with a lower case', 
					RestDslPackage.Literals.ATTRIBUTE__NAME,
					INVALID_ATTRIB_NAME)
		}
	}
	
	@Check 
	def checkSingleResourceStartsWithKapital(RESTState resource){
		if(!Character.isUpperCase(resource.name.charAt(0))){
			warning ('Resource names should start with capital', 
					RestDslPackage.Literals.REST_STATE__NAME, 
					INVALID_RES_NAME)
		}
	}
	
//	@Check
//	def checkSingleStart(RESTResources resourceCol){
//		var list = resourceCol.resources.filter[res|(res.isStart == true)];
//		if(list.size > 1){
//			error('There is more then one start resource. Please choose only one', 
//				RestDslPackage.Literals.REST_RESOURCE__IS_START, 
//				REST_START_POINT)
//		}
//		if(list.size <= 0){
//			error('There is no start resource defined. Please choose only one', 
//				RestDslPackage.Literals.REST_RESOURCES__RESOURCES, 
//				REST_START_POINT)
//		}
//	}
}
